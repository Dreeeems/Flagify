{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Desktop\\\\projects\\\\Flagify\\\\src\\\\pages\\\\homePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { fetch } from \"../utils/fetch\";\nimport CountryCard from \"../components/countryCard\";\nimport Filter from \"../components/filter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [randomCountry, SetRandomCountry] = useState(null);\n  const [displayedData, setDisplayedData] = useState([]);\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const getRandomInt = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await fetch();\n        console.log(result);\n        setData(result);\n        setDisplayedData(result); // Initially, display all data\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (data) {\n      const entry = getRandomInt(0, 250);\n      SetRandomCountry(displayedData[entry]);\n      console.log(randomCountry);\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-96\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 38\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"WUOWih7L3jd1OXbbs1QQ/BayiVI=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","fetch","CountryCard","Filter","jsxDEV","_jsxDEV","HomePage","_s","randomCountry","SetRandomCountry","displayedData","setDisplayedData","data","setData","loading","setLoading","getRandomInt","min","max","Math","ceil","floor","random","fetchData","result","console","log","error","entry","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Utilisateur/Desktop/projects/Flagify/src/pages/homePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { fetch } from \"../utils/fetch\";\nimport CountryCard from \"../components/countryCard\";\nimport Filter from \"../components/filter\";\n\nconst HomePage = () => {\n  const [randomCountry, SetRandomCountry] = useState(null);\n  const [displayedData, setDisplayedData] = useState([]);\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const getRandomInt = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await fetch();\n        console.log(result);\n        setData(result);\n        setDisplayedData(result); // Initially, display all data\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (data) {\n      const entry = getRandomInt(0, 250);\n      SetRandomCountry(displayedData[entry]);\n      console.log(randomCountry);\n    }\n  }, [data]);\n\n  return (\n    <div className=\"h-96\">\n      {loading ? <p>Loading...</p> : <div className=\"\"></div>}\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMiB,YAAY,GAAGA,CAACC,GAAG,EAAEC,GAAG,KAAK;IACjCD,GAAG,GAAGE,IAAI,CAACC,IAAI,CAACH,GAAG,CAAC;IACpBC,GAAG,GAAGC,IAAI,CAACE,KAAK,CAACH,GAAG,CAAC;IACrB,OAAOC,IAAI,CAACE,KAAK,CAACF,IAAI,CAACG,MAAM,CAAC,CAAC,IAAIJ,GAAG,GAAGD,GAAG,CAAC,CAAC,GAAGA,GAAG;EACtD,CAAC;EACDjB,SAAS,CAAC,MAAM;IACd,MAAMuB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,MAAM,GAAG,MAAMvB,KAAK,CAAC,CAAC;QAC5BwB,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;QACnBX,OAAO,CAACW,MAAM,CAAC;QACfb,gBAAgB,CAACa,MAAM,CAAC,CAAC,CAAC;MAC5B,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C,CAAC,SAAS;QACRZ,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDQ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAENvB,SAAS,CAAC,MAAM;IACd,IAAIY,IAAI,EAAE;MACR,MAAMgB,KAAK,GAAGZ,YAAY,CAAC,CAAC,EAAE,GAAG,CAAC;MAClCP,gBAAgB,CAACC,aAAa,CAACkB,KAAK,CAAC,CAAC;MACtCH,OAAO,CAACC,GAAG,CAAClB,aAAa,CAAC;IAC5B;EACF,CAAC,EAAE,CAACI,IAAI,CAAC,CAAC;EAEV,oBACEP,OAAA;IAAKwB,SAAS,EAAC,MAAM;IAAAC,QAAA,EAClBhB,OAAO,gBAAGT,OAAA;MAAAyB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAAG7B,OAAA;MAAKwB,SAAS,EAAC;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAzCID,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AA2Cd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}