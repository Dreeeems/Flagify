{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Desktop\\\\projects\\\\Flagify\\\\src\\\\components\\\\time.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { questions } from \"../utils/questions\";\nimport { setQuestion } from \"../reducer/questionSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getRandomQuestion = () => {\n  const questionID = Math.floor(Math.random() * questions.length);\n  return questions[questionID];\n};\nconsole.log(getRandomQuestion());\nconst Time = () => {\n  _s();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const randomQuestion = getRandomQuestion();\n    dispatch(setQuestion(randomQuestion));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Time\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 10\n  }, this);\n};\n_s(Time, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n_c = Time;\nexport default Time;\nvar _c;\n$RefreshReg$(_c, \"Time\");","map":{"version":3,"names":["React","useEffect","questions","setQuestion","useDispatch","jsxDEV","_jsxDEV","getRandomQuestion","questionID","Math","floor","random","length","console","log","Time","_s","dispatch","randomQuestion","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Utilisateur/Desktop/projects/Flagify/src/components/time.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { questions } from \"../utils/questions\";\r\nimport { setQuestion } from \"../reducer/questionSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nconst getRandomQuestion = () => {\r\n  const questionID = Math.floor(Math.random() * questions.length);\r\n  return questions[questionID];\r\n};\r\n\r\nconsole.log(getRandomQuestion());\r\nconst Time = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const randomQuestion = getRandomQuestion();\r\n    dispatch(setQuestion(randomQuestion));\r\n  });\r\n  return <div>Time</div>;\r\n};\r\n\r\nexport default Time;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1C,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAC9B,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGT,SAAS,CAACU,MAAM,CAAC;EAC/D,OAAOV,SAAS,CAACM,UAAU,CAAC;AAC9B,CAAC;AAEDK,OAAO,CAACC,GAAG,CAACP,iBAAiB,CAAC,CAAC,CAAC;AAChC,MAAMQ,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IACd,MAAMiB,cAAc,GAAGX,iBAAiB,CAAC,CAAC;IAC1CU,QAAQ,CAACd,WAAW,CAACe,cAAc,CAAC,CAAC;EACvC,CAAC,CAAC;EACF,oBAAOZ,OAAA;IAAAa,QAAA,EAAK;EAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AACxB,CAAC;AAACP,EAAA,CARID,IAAI;EAAA,QACSX,WAAW;AAAA;AAAAoB,EAAA,GADxBT,IAAI;AAUV,eAAeA,IAAI;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}