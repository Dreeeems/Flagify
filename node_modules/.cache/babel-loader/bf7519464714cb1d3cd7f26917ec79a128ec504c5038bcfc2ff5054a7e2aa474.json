{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Desktop\\\\flagify\\\\Flagify\\\\src\\\\components\\\\countryBtn.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst checkAnswer = (countries, question, answer) => {\n  let result = countries[0];\n  switch (question.questionId) {\n    case 0:\n      for (let i = 0; i < countries.length; i++) {\n        if (result.population < countries[i].population) {\n          result = countries[i];\n        }\n      }\n      console.log(result.name.common);\n      break;\n  }\n};\nconst CountryBtn = props => {\n  _s();\n  const countries = useSelector(state => state.country);\n  const question = useSelector(state => state.question);\n  console.log(countries, question);\n  const {\n    country\n  } = props;\n  //console.log(country);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full flex justify-center items-center\",\n    onClick: () => checkAnswer(country, question),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 gap-4 w-full max-w-lg p-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-500 hover:bg-red-600 text-white font-bold py-10 rounded-lg transition-all cursor-pointer\",\n        onClick: () => checkAnswer(country, question),\n        children: country.name.common\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-blue-500 hover:bg-blue-600 text-white font-bold py-10 rounded-lg transition-all cursor-pointer\",\n        onClick: () => checkAnswer(country, question),\n        children: country.name.common\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-green-500 hover:bg-green-600 text-white font-bold py-10 rounded-lg transition-all cursor-pointer\",\n        onClick: () => checkAnswer(country, question),\n        children: country.name.common\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-yellow-500 hover:bg-yellow-600 text-white font-bold py-10 rounded-lg transition-all cursor-pointer\",\n        onClick: () => checkAnswer(country, question),\n        children: country.name.common\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(CountryBtn, \"IetaTw2qpGbLbGbkJa5MwE9DZM8=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = CountryBtn;\nexport default CountryBtn;\nvar _c;\n$RefreshReg$(_c, \"CountryBtn\");","map":{"version":3,"names":["React","useSelector","jsxDEV","_jsxDEV","checkAnswer","countries","question","answer","result","questionId","i","length","population","console","log","name","common","CountryBtn","props","_s","state","country","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Utilisateur/Desktop/flagify/Flagify/src/components/countryBtn.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst checkAnswer = (countries, question, answer) => {\r\n  let result = countries[0];\r\n  switch (question.questionId) {\r\n    case 0:\r\n      for (let i = 0; i < countries.length; i++) {\r\n        if (result.population < countries[i].population) {\r\n          result = countries[i];\r\n        }\r\n      }\r\n      console.log(result.name.common);\r\n      break;\r\n  }\r\n};\r\n\r\nconst CountryBtn = (props) => {\r\n  const countries = useSelector((state) => state.country);\r\n  const question = useSelector((state) => state.question);\r\n  console.log(countries, question);\r\n  const { country } = props;\r\n  //console.log(country);\r\n\r\n  return (\r\n    <div\r\n      className=\"w-full flex justify-center items-center\"\r\n      onClick={() => checkAnswer(country, question)}\r\n    >\r\n      <div className=\"grid grid-cols-2 gap-4 w-full max-w-lg p-10\">\r\n        {/* Bouton avec style dynamique */}\r\n        <div\r\n          className=\"bg-red-500 hover:bg-red-600 text-white font-bold py-10 rounded-lg transition-all cursor-pointer\"\r\n          onClick={() => checkAnswer(country, question)}\r\n        >\r\n          {country.name.common}\r\n        </div>\r\n        <div\r\n          className=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-10 rounded-lg transition-all cursor-pointer\"\r\n          onClick={() => checkAnswer(country, question)}\r\n        >\r\n          {country.name.common}\r\n        </div>\r\n        <div\r\n          className=\"bg-green-500 hover:bg-green-600 text-white font-bold py-10 rounded-lg transition-all cursor-pointer\"\r\n          onClick={() => checkAnswer(country, question)}\r\n        >\r\n          {country.name.common}\r\n        </div>\r\n        <div\r\n          className=\"bg-yellow-500 hover:bg-yellow-600 text-white font-bold py-10 rounded-lg transition-all cursor-pointer\"\r\n          onClick={() => checkAnswer(country, question)}\r\n        >\r\n          {country.name.common}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryBtn;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}