{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst questionSlice = createSlice({\n  name: \"question\",\n  initialState: {\n    question: \"\",\n    // Utiliser `text` pour la question\n    id: \"\" // Utiliser `country` pour stocker des informations supplémentaires si nécessaire\n  },\n  reducers: {\n    setQuestion: (state, action) => {\n      state.question = action.payload.text; // Assurez-vous que `text` est la bonne clé\n      state.id = action.payload.country; // Assurez-vous que `country` est la bonne clé (si vous utilisez un pays)\n    }\n  }\n});\nexport const {\n  setQuestion\n} = questionSlice.actions;\nexport default questionSlice.reducer;","map":{"version":3,"names":["createSlice","questionSlice","name","initialState","question","id","reducers","setQuestion","state","action","payload","text","country","actions","reducer"],"sources":["C:/Users/Utilisateur/Desktop/projects/Flagify/src/reducer/questionSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst questionSlice = createSlice({\r\n  name: \"question\",\r\n  initialState: {\r\n    question: \"\", // Utiliser `text` pour la question\r\n    id: \"\", // Utiliser `country` pour stocker des informations supplémentaires si nécessaire\r\n  },\r\n  reducers: {\r\n    setQuestion: (state, action) => {\r\n      state.question = action.payload.text; // Assurez-vous que `text` est la bonne clé\r\n      state.id = action.payload.country; // Assurez-vous que `country` est la bonne clé (si vous utilisez un pays)\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setQuestion } = questionSlice.actions;\r\nexport default questionSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,aAAa,GAAGD,WAAW,CAAC;EAChCE,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACZC,QAAQ,EAAE,EAAE;IAAE;IACdC,EAAE,EAAE,EAAE,CAAE;EACV,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAW,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACJ,QAAQ,GAAGK,MAAM,CAACC,OAAO,CAACC,IAAI,CAAC,CAAC;MACtCH,KAAK,CAACH,EAAE,GAAGI,MAAM,CAACC,OAAO,CAACE,OAAO,CAAC,CAAC;IACrC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEL;AAAY,CAAC,GAAGN,aAAa,CAACY,OAAO;AACpD,eAAeZ,aAAa,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}