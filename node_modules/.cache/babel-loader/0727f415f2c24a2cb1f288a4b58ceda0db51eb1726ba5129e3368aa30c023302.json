{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst questionSlice = createSlice({\n  name: \"question\",\n  initialState: {\n    text: \"\",\n    // Utiliser `text` pour la question\n    country: \"\" // Utiliser `country` pour stocker des informations supplémentaires si nécessaire\n  },\n  reducers: {\n    setQuestion: (state, action) => {\n      state.text = action.payload.text; // Assurez-vous que `text` est la bonne clé\n      state.country = action.payload.country; // Assurez-vous que `country` est la bonne clé (si vous utilisez un pays)\n    }\n  }\n});\nexport const {\n  setQuestion\n} = questionSlice.actions;\nexport default questionSlice.reducer;","map":{"version":3,"names":["createSlice","questionSlice","name","initialState","text","country","reducers","setQuestion","state","action","payload","actions","reducer"],"sources":["C:/Users/Utilisateur/Desktop/projects/Flagify/src/reducer/questionSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst questionSlice = createSlice({\r\n  name: \"question\",\r\n  initialState: {\r\n    text: \"\", // Utiliser `text` pour la question\r\n    country: \"\", // Utiliser `country` pour stocker des informations supplémentaires si nécessaire\r\n  },\r\n  reducers: {\r\n    setQuestion: (state, action) => {\r\n      state.text = action.payload.text; // Assurez-vous que `text` est la bonne clé\r\n      state.country = action.payload.country; // Assurez-vous que `country` est la bonne clé (si vous utilisez un pays)\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setQuestion } = questionSlice.actions;\r\nexport default questionSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,aAAa,GAAGD,WAAW,CAAC;EAChCE,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACZC,IAAI,EAAE,EAAE;IAAE;IACVC,OAAO,EAAE,EAAE,CAAE;EACf,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAW,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACJ,IAAI,GAAGK,MAAM,CAACC,OAAO,CAACN,IAAI,CAAC,CAAC;MAClCI,KAAK,CAACH,OAAO,GAAGI,MAAM,CAACC,OAAO,CAACL,OAAO,CAAC,CAAC;IAC1C;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEE;AAAY,CAAC,GAAGN,aAAa,CAACU,OAAO;AACpD,eAAeV,aAAa,CAACW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}